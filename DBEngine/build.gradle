plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

version '1.2'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

shadowJar {
    mergeServiceFiles()

    dependencies {

        /*
        include (dependency("org.jooq:jooq:3.12.1"))
        include (dependency("com.zaxxer:HikariCP:3.3.1"))
        include (dependency("postgresql:postgresql:9.4.1208-jdbc42-atlassian-hosted"))

        include (dependency("org.redisson:redisson:3.11.3"))
        include (dependency("io.netty:+:+"))
        include (dependency("javax.cache:cache-api:1.0.0"))
        */
        exclude "spigot.jar"
        exclude "com.nametagedit:nametagedit:4.4.6"
        exclude 'com.grinderwolf:slimeworldmanager-api:2.1.1'
        //exclude(dependency("com.comphenix.protocol:ProtocolLib:4.4.0"))

    }

    relocate("io.netty", "org.redisson.netty")
    //todo: include everything in the packetwrapper, rather than minimizing
    //minimize()
}

dependencies {
    compileOnly fileTree("../../libs")

    implementation "org.reflections:reflections:0.9.11"
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'org.bukkit:bukkit:1.8.8-R0.1-SNAPSHOT'
    testImplementation 'org.slf4j:slf4j-simple:1.7.21'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.1'
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.5.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'

    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.5.1"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
    implementation 'com.grinderwolf:slimeworldmanager-api:2.1.1'
    //implementation 'com.comphenix.protocol:ProtocolLib:4.4.0'

    implementation 'org.mongodb:mongodb-driver-async:3.12.1'
    implementation 'dev.morphia.morphia:core:1.5.8'
    implementation 'org.redisson:redisson:3.11.3'
}

test {
    test.dependsOn(shadowJar)
    useJUnitPlatform()
    systemProperty "lobby.code", "dom1234132"

    testLogging.showStandardStreams true
}


task spigot(dependsOn: shadowJar) {

}
