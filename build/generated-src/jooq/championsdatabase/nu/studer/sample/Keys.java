/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample;


import javax.annotation.Generated;

import nu.studer.sample.tables.Descriptions;
import nu.studer.sample.tables.Kits;
import nu.studer.sample.tables.Locations;
import nu.studer.sample.tables.Permissions;
import nu.studer.sample.tables.Players;
import nu.studer.sample.tables.records.DescriptionsRecord;
import nu.studer.sample.tables.records.KitsRecord;
import nu.studer.sample.tables.records.LocationsRecord;
import nu.studer.sample.tables.records.PermissionsRecord;
import nu.studer.sample.tables.records.PlayersRecord;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DescriptionsRecord> DESCRIPTIONS__PRIMARY_ID = UniqueKeys0.DESCRIPTIONS__PRIMARY_ID;
    public static final UniqueKey<DescriptionsRecord> DESCRIPTIONS__UNIQUE_KEY = UniqueKeys0.DESCRIPTIONS__UNIQUE_KEY;
    public static final UniqueKey<KitsRecord> KITS_PLAYER_PRIMARY = UniqueKeys0.KITS_PLAYER_PRIMARY;
    public static final UniqueKey<LocationsRecord> LOCATIONS_PRIMARY_ID = UniqueKeys0.LOCATIONS_PRIMARY_ID;
    public static final UniqueKey<LocationsRecord> LOCATIONS_UNIQUE_NAME = UniqueKeys0.LOCATIONS_UNIQUE_NAME;
    public static final UniqueKey<PermissionsRecord> PERMISSIONS_UNIQUE = UniqueKeys0.PERMISSIONS_UNIQUE;
    public static final UniqueKey<PlayersRecord> PLAYERS__PRIMARY_PLAYER_ID = UniqueKeys0.PLAYERS__PRIMARY_PLAYER_ID;
    public static final UniqueKey<PlayersRecord> PLAYERS__UNIQUE_PLAYER_UUID = UniqueKeys0.PLAYERS__UNIQUE_PLAYER_UUID;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<KitsRecord, PlayersRecord> KITS__KITS_FOREIGN_PLAYER_ID = ForeignKeys0.KITS__KITS_FOREIGN_PLAYER_ID;
    public static final ForeignKey<PermissionsRecord, PlayersRecord> PERMISSIONS__PERMISSIONS_FOREIGN_PLAYER_ID = ForeignKeys0.PERMISSIONS__PERMISSIONS_FOREIGN_PLAYER_ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<DescriptionsRecord> DESCRIPTIONS__PRIMARY_ID = Internal.createUniqueKey(Descriptions.DESCRIPTIONS, "DESCRIPTIONS__primary_id", Descriptions.DESCRIPTIONS.ID);
        public static final UniqueKey<DescriptionsRecord> DESCRIPTIONS__UNIQUE_KEY = Internal.createUniqueKey(Descriptions.DESCRIPTIONS, "DESCRIPTIONS__unique_key", Descriptions.DESCRIPTIONS.KEY);
        public static final UniqueKey<KitsRecord> KITS_PLAYER_PRIMARY = Internal.createUniqueKey(Kits.KITS, "KITS_player_primary", Kits.KITS.PLAYER_ID, Kits.KITS.CLASS, Kits.KITS.BUILD_ID);
        public static final UniqueKey<LocationsRecord> LOCATIONS_PRIMARY_ID = Internal.createUniqueKey(Locations.LOCATIONS, "LOCATIONS_primary_id", Locations.LOCATIONS._ID);
        public static final UniqueKey<LocationsRecord> LOCATIONS_UNIQUE_NAME = Internal.createUniqueKey(Locations.LOCATIONS, "LOCATIONS_unique_name", Locations.LOCATIONS.NAME);
        public static final UniqueKey<PermissionsRecord> PERMISSIONS_UNIQUE = Internal.createUniqueKey(Permissions.PERMISSIONS, "PERMISSIONS_unique", Permissions.PERMISSIONS.PLAYER_ID, Permissions.PERMISSIONS.PERMISSION_ID);
        public static final UniqueKey<PlayersRecord> PLAYERS__PRIMARY_PLAYER_ID = Internal.createUniqueKey(Players.PLAYERS, "PLAYERS__primary_player_id", Players.PLAYERS._ID);
        public static final UniqueKey<PlayersRecord> PLAYERS__UNIQUE_PLAYER_UUID = Internal.createUniqueKey(Players.PLAYERS, "PLAYERS__unique_player_uuid", Players.PLAYERS.UUID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<KitsRecord, PlayersRecord> KITS__KITS_FOREIGN_PLAYER_ID = Internal.createForeignKey(nu.studer.sample.Keys.PLAYERS__PRIMARY_PLAYER_ID, Kits.KITS, "kits__KITS_foreign_player_id", Kits.KITS.PLAYER_ID);
        public static final ForeignKey<PermissionsRecord, PlayersRecord> PERMISSIONS__PERMISSIONS_FOREIGN_PLAYER_ID = Internal.createForeignKey(nu.studer.sample.Keys.PLAYERS__PRIMARY_PLAYER_ID, Permissions.PERMISSIONS, "permissions__PERMISSIONS_foreign_player_id", Permissions.PERMISSIONS.PLAYER_ID);
    }
}
