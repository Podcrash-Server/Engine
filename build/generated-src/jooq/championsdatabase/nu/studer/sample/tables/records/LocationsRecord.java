/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.tables.records;


import javax.annotation.Generated;

import nu.studer.sample.tables.Locations;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocationsRecord extends UpdatableRecordImpl<LocationsRecord> implements Record7<Long, String, Integer, Integer, Double, Double, Double> {

    private static final long serialVersionUID = 1332112172;

    /**
     * Setter for <code>public.locations._id</code>.
     */
    public LocationsRecord set_Id(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.locations._id</code>.
     */
    public Long get_Id() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.locations.name</code>.
     */
    public LocationsRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.locations.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.locations.otype</code>.
     */
    public LocationsRecord setOtype(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.locations.otype</code>.
     */
    public Integer getOtype() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.locations.map_id</code>.
     */
    public LocationsRecord setMapId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.locations.map_id</code>.
     */
    public Integer getMapId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.locations.x</code>.
     */
    public LocationsRecord setX(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.locations.x</code>.
     */
    public Double getX() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.locations.y</code>.
     */
    public LocationsRecord setY(Double value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.locations.y</code>.
     */
    public Double getY() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>public.locations.z</code>.
     */
    public LocationsRecord setZ(Double value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.locations.z</code>.
     */
    public Double getZ() {
        return (Double) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Integer, Integer, Double, Double, Double> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Integer, Integer, Double, Double, Double> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Locations.LOCATIONS._ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Locations.LOCATIONS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Locations.LOCATIONS.OTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Locations.LOCATIONS.MAP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Locations.LOCATIONS.X;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return Locations.LOCATIONS.Y;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return Locations.LOCATIONS.Z;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return get_Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getOtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getMapId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getZ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return get_Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getOtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getMapId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getZ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value1(Long value) {
        set_Id(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value3(Integer value) {
        setOtype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value4(Integer value) {
        setMapId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value5(Double value) {
        setX(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value6(Double value) {
        setY(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value7(Double value) {
        setZ(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord values(Long value1, String value2, Integer value3, Integer value4, Double value5, Double value6, Double value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LocationsRecord
     */
    public LocationsRecord() {
        super(Locations.LOCATIONS);
    }

    /**
     * Create a detached, initialised LocationsRecord
     */
    public LocationsRecord(Long _Id, String name, Integer otype, Integer mapId, Double x, Double y, Double z) {
        super(Locations.LOCATIONS);

        set(0, _Id);
        set(1, name);
        set(2, otype);
        set(3, mapId);
        set(4, x);
        set(5, y);
        set(6, z);
    }
}
