/*
 * This file is generated by jOOQ.
 */
package com.podcrash.api.db.jooq.tables.records;


import java.util.UUID;

import javax.annotation.Generated;

import com.podcrash.api.db.jooq.tables.Players;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayersRecord extends UpdatableRecordImpl<PlayersRecord> implements Record2<Long, UUID> {

    private static final long serialVersionUID = -197112741;

    /**
     * Setter for <code>public.players._id</code>.
     */
    public PlayersRecord set_Id(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.players._id</code>.
     */
    public Long get_Id() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.players.uuid</code>.
     */
    public PlayersRecord setUuid(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.players.uuid</code>.
     */
    public UUID getUuid() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Players.PLAYERS._ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return Players.PLAYERS.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return get_Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component2() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return get_Id();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayersRecord value1(Long value) {
        set_Id(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayersRecord value2(UUID value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayersRecord values(Long value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayersRecord
     */
    public PlayersRecord() {
        super(Players.PLAYERS);
    }

    /**
     * Create a detached, initialised PlayersRecord
     */
    public PlayersRecord(Long _Id, UUID uuid) {
        super(Players.PLAYERS);

        set(0, _Id);
        set(1, uuid);
    }
}
